#!/usr/bin/env bash

set -e

notif() {
    echo -e "\n$@" \
            "\n================================================================================" \
            "\n" >&2
}

NPROCS="${NPROCS:-$(nproc)}"
WORKSPACE="${WORKSPACE:-$(pwd)}"

K_EXERCISES_REPO="${K_EXERCISES_REPO:-git@github.com:kframework/k-exercises.git}"
RVMATCH_REPO="${RVMATCH_REPO:-git@github.com:runtimeverification/rv-match.git}"

KSERVER_SOCKET="$WORKSPACE/kserver"
KSERVER_LOG="$WORKSPACE/kserver.log"
export KSERVER_SOCKET

notif "CLEANING REPO"
git clean -dffx

notif "SETTING UP OPAM/PERL ENVIRONMENTS"
eval `opam config env`
eval `perl -I$HOME/perl5/lib/perl5 -Mlocal::lib`
source $HOME/.cargo/env

notif "UPGRADING LOCAL STACK"
export PATH=$HOME/.local/bin:$PATH
stack upgrade --force-download
stack --version

notif "CLONING SUBMODULES"
git submodule update --init --recursive

notif "BUILDING/RUNNING LOCAL TESTS"
mvn verify -U

notif "STARTING KSERVER"
./k-distribution/target/release/k/bin/spawn-kserver "$KSERVER_LOG"
sleep 5

notif "CLONING K EXERCISES"
git clone "$K_EXERCISES_REPO" k-exercises

notif "RUNNING K EXERCISES"
exit_status='0'
(   cd k-exercises/tutorial
    make -j"$NPROCS"
) || exit_status="$?"

notif "KILLING KSERVER"
./k-distribution/target/release/k/bin/stop-kserver || true
[[ "$exit_status" == '0' ]] || exit "$exit_status"

notif "CLONING/PREPARING RV-MATCH"
rm -rf rv-match
git clone "$RVMATCH_REPO" rv-match
(   cd rv-match
    git submodule update --init -- c-semantics k
    cd k
    git fetch ../../
    git checkout FETCH_HEAD
    git submodule update --init --recursive
    mvn package -DskipTests
)

notif "RUNNING RV-MATCH TESTS"
(   cd rv-match
    mvn verify -U -DskipKTest -DbuildProfile=x86_64-gcc-glibc
)
